//     Inherify.js
//     @author: Mickael Drymon
//
//     Copyright (c) 2015 mdrymon.
//     The MIT License (MIT)
(function(){Inherify={factory:function(a){if("object"!==typeof a)throw Error("Options must be an object");if(a.element&&"object"!==typeof a.element)throw Error("Options.element must be an object");if(a.prototypes&&"object"!==typeof a.prototypes)throw Error("Options.prototypes must be an object");if(a.construct&&"string"!==typeof a.construct)throw Error("Options.construct must be a string or null");if(a.extend&&"string"!==typeof a.extend)throw Error("Options.construct must be a string or null");a.construct=
a.construct||"Inherify_BClass";window[a.construct]=function(){if(a.element){"[object Array]"===Object.prototype.toString.call(a.params)&&(a.params=[]);for(var b in a.element)"init"!==b&&(this[b]=a.element[b]);"function"===typeof a.element.init&&a.element.init.apply(this,a.params)}};a.extend&&"function"===typeof window[a.extend]&&(this.parents[a.extend]=window[a.extend].prototype,window[a.construct].prototype=new window[a.extend]);for(var c in a.prototypes)window[a.construct].prototype[c]=a.prototypes[c];
window[a.construct].prototype.constructor=window[a.construct];return new window[a.construct]},parents:{},base:function(a){return this.parents[a]}}})();
